events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream web_server {
        server web-server:8080;
    }

    upstream books_get {
        server books-get:8080;
    }

    upstream books_post {
        server books-post:8080;
    }

    upstream books_put {
        server books-put:8080;
    }

    upstream books_delete {
        server books-delete:8080;
    }

    server {
        listen 80;
        server_name localhost;

        # Handle static files and web pages - route to web-server
        location / {
            proxy_pass http://web_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/books requests based on HTTP method
        location = /api/books {
            # GET requests to books-get service
            if ($request_method = GET) {
                proxy_pass http://books_get;
            }

            # POST requests to books-post service
            if ($request_method = POST) {
                proxy_pass http://books_post;
            }

            # Set common headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $content_type;
        }

        # Handle parameterized routes for PUT and DELETE (/api/books/:id)
        location ~ ^/api/books/(.+)$ {
            # PUT requests with ID to books-put service
            if ($request_method = PUT) {
                proxy_pass http://books_put;
            }

            # DELETE requests with ID to books-delete service
            if ($request_method = DELETE) {
                proxy_pass http://books_delete;
            }

            # Set common headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $content_type;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}